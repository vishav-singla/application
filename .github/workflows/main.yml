  name: CI/CD Pipeline

  on:
    push:
      branches:
        - main

  jobs:
    build-and-push:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Log in to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push backend image
          run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/docx2pdf-backend ./node-server
            docker push ${{ secrets.DOCKER_USERNAME }}/docx2pdf-backend

        - name: Build and push frontend image
          run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/docx2pdf-frontend ./react-client
            docker push ${{ secrets.DOCKER_USERNAME }}/docx2pdf-frontend

    deploy:
      needs: build-and-push
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
    
        - name: Set up kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'latest'
    
        - name: Set up Kubeconfig
          run: |
            echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
            export KUBECONFIG=kubeconfig
    
        - name: Change to project root
          run: cd $GITHUB_WORKSPACE
    
        - name: Apply Kubernetes manifests
          run: |
            kubectl apply -f k8s/namespace.yaml
            kubectl apply -f k8s/backend-deployment.yaml
            kubectl apply -f k8s/frontend-deployment.yaml
            kubectl apply -f k8s/ingress.yaml


    # terraform:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout repository
    #       uses: actions/checkout@v3

    #     - name: Setup Terraform
    #       uses: hashicorp/setup-terraform@v2
    #       with:
    #         terraform_version: 1.5.0

    #     - name: Initialize Terraform
    #       run: terraform init
    #       working-directory: ./terraform

    #     - name: Apply Terraform
    #       run: terraform apply -auto-approve
    #       working-directory: ./terraform
    #       env:
    #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
